{
    "version": "0.2.0",
    "configurations": [
        

        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
        },
        {
            "justMyCode": false,
            "name": "local_api_query_segmentation_cell",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--db_path", "preprocessor/temp/test_db",
                "--out", "segm.bcif",
                "segmentation-cell",
                "--entry-id", "emd-1832",
                "--source-db", "emdb",
                "--time", "0",
                "--channel-id", "0",
                "--lattice-id", "0"
            ]
        },
        {
            "justMyCode": false,
            "name": "query_composite_volume_and_segm_cell",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--db_path", "preprocessor/temp/test_db",
                "--out", "my_zip.zip",
                "volume-and-segmentation-cell",
                // "--composite-query-type", "volume-and-segmentation-cell",
                "--entry-id", "emd-1832",
                "--source-db", "emdb",
                "--time", "0",
                "--channel-id", "0",
                "--lattice-id", "0"
            ]
        },
        {
            "justMyCode": false,
            "name": "local_api_query_volume_cell",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--db_path", "preprocessor/temp/test_db",
                "--out", "volume.bcif",
                "volume-cell",
                "--entry-id", "emd-1832",
                "--source-db", "emdb",
                "--time", "0",
                "--channel-id", "0",
            ]
        },
        {
            "justMyCode": false,
            "name": "local_api_query_mesh",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--db_path", "preprocessor/temp/test_db",
                "--out", "some.json",
                "mesh",
                "--entry-id", "empiar-10070",
                "--source-db", "empiar",
                "--time", "0",
                "--channel-id", "0",
                "--segment-id", "1", "--detail-lvl", "1"
            ]
        },
        {
            "justMyCode": false,
            "name": "local_api_list_entries",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--db_path", "preprocessor/temp/test_db",
                "--out", "some.json",
                "list-entries",
                "--limit", "100"
            ]
        },
        {
            "justMyCode": false,
            "name": "local_api_list_entries_keyword",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--db_path", "preprocessor/temp/test_db",
                "--out", "some.json",
                "list-entries-keyword",
                "--limit", "100",
                "--keyword", "emd"
            ]
        },
        {
            "justMyCode": false,
            "name": "tomoprocessor_empiar_dataset_171.rec",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--map", "preprocessor/temp/171.rec",
                "--particles-star-file", "preprocessor/temp/80S_bin1_cryoDRGN-ET_clean_tomo_171.star",
                "--pixel-size", "1.96",
                "--max-volume-size-mb", "100",
                "--default-isovalue-sigma", "2",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--out", "preprocessor/temp/171.zip",
                // "--db-path", "preprocessor/temp/test_db",
                "--sphere-radius", "16",
                "--sphere-color", "16776960",
                "--entry-id", "80S_bin1_cryoDRGN-ET_clean_tomo_171",
                "--source-db", "pdbe"
            ]
        },
        {
            "justMyCode": false,
            "name": "custom_preprocessor_geometric_segmentation",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--map", "preprocessor/temp/pdbe_dataset_scripts/9.rec",
                "--particles-star-file", "preprocessor/temp/pdbe_dataset_scripts/80S_bin1_cryoDRGN-ET_clean_tomo_9.star",
                "--pixel-size", "1.96",
                "--max-volume-size-mb", "100",
                "--default-isovalue-sigma", "2",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--out", "preprocessor/temp/test_zip.zip",
                // "--db-path", "preprocessor/temp/test_db",
                "--sphere-radius", "16",
                "--sphere-color", "16776960",
                "--entry-id", "80S_bin1_cryoDRGN-ET_clean_tomo_9",
                "--source-db", "pdbe"
            ]
        },
        {
            "name": "preprocessor_9_rec_with_geometric_segmentation",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "preprocessor/temp/pdbe_dataset_scripts/9.rec",
                "--input-kind",
                "map",
                "--input-path",
                "preprocessor/temp/shape_primitives/shape_primitives_9rec_input.json",
                "--input-kind",
                "geometric_segmentation",
                "--entry-id",
                "empiar-11658-9.rec",
                "--source-db",
                "pdbe",
                "--source-db-id", "empiar-11658-9.rec",
                "--source-db-name", "pdbe",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "preprocessor_emd_17129",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/emdb/emd-17129/emd_17129.map",
                "--input-kind",
                "map",
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/emdb/emd-17129/emd_17129_msk_1.map",
                "--input-kind",
                "mask",
                // "--input-path",
                // "preprocessor/temp/custom_annotations_emd_17129.json",
                // "--input-kind",
                // "custom_annotations",
                "--entry-id",
                "emd-17129",
                "--source-db",
                "emdb",
                "--source-db-id", "emd-17129",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "preprocessor_emd_1273_multiple_masks",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/emdb/emd-1273/emd_1273.map",
                "--input-kind",
                "map",
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/emdb/emd-1273/emd_1273_msk_1.map",
                "--input-kind",
                "mask",
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/emdb/emd-1273/emd_1273_msk_2.map",
                "--input-kind",
                "mask",
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/emdb/emd-1273/emd_1273_msk_3.map",
                "--input-kind",
                "mask",
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/emdb/emd-1273/emd_1273_msk_4.map",
                "--input-kind",
                "mask",
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/emdb/emd-1273/emd_1273_msk_5.map",
                "--input-kind",
                "mask",
                "--input-path",
                "preprocessor/temp/custom_annotations_emd_1273.json",
                "--input-kind",
                "custom_annotations",
                "--entry-id",
                "emd-1273",
                "--source-db",
                "emdb",
                "--source-db-id", "emd-1273",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "preprocessor_geometric_segmentation",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "preprocessor/temp/shape_primitives/shape_primitives_input_.json",
                "--input-kind",
                "geometric_segmentation",
                "--entry-id",
                "pdbe-1.rec-geometric_segmentation",
                "--source-db",
                "pdbe",
                "--source-db-id", "pdbe-1.rec-geometric_segmentation",
                "--source-db-name", "pdbe",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--force-volume-dtype", "u1",
                "--add-segmentation-to-entry"
            ]
        },
        {
            "name": "preprocessor_emd_1832_edit_custom_annotation_fields",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                // "--input-path",
                // "test-data/preprocessor/sample_volumes/emdb_sff/EMD-1832.map",
                // "--input-kind",
                // "map",
                // "--input-path",
                // "test-data/preprocessor/sample_segmentations/emdb_sff/emd_1832.hff",
                // "--input-kind",
                // "sff",
                "--input-path",
                "preprocessor/temp/custom_annotations_edit_fields.json",
                "--input-kind",
                "custom_annotations",
                "--entry-id",
                "emd-1832",
                "--source-db",
                "emdb",
                "--source-db-id", "emd-1832",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--force-volume-dtype", "u1"
                "--add-custom-annotations",
                // "--add-segmentation-to-entry"
            ]
        },
        {
            "name": "preprocessor_emd_1832_just_custom_annotations_and_segmentation",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                // "--input-path",
                // "test-data/preprocessor/sample_volumes/emdb_sff/EMD-1832.map",
                // "--input-kind",
                // "map",
                "--input-path",
                "test-data/preprocessor/sample_segmentations/emdb_sff/emd_1832.hff",
                "--input-kind",
                "sff",
                "--input-path",
                "preprocessor/temp/custom_annotations.json",
                "--input-kind",
                "custom_annotations",
                "--entry-id",
                "emd-1832",
                "--source-db",
                "emdb",
                "--source-db-id", "emd-1832",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--force-volume-dtype", "u1"
                "--add-custom-annotations",
                "--add-segmentation-to-entry"
            ]
        },
        {
            "name": "preprocessor_emd_1832_just_custom_annotations",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                // "--input-path",
                // "test-data/preprocessor/sample_volumes/emdb_sff/EMD-1832.map",
                // "--input-kind",
                // "map",
                // "--input-path",
                // "test-data/preprocessor/sample_segmentations/emdb_sff/emd_1832.hff",
                // "--input-kind",
                // "sff",
                "--input-path",
                "preprocessor/temp/custom_annotations.json",
                "--input-kind",
                "custom_annotations",
                "--entry-id",
                "emd-1832",
                "--source-db",
                "emdb",
                "--source-db-id", "emd-1832",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--force-volume-dtype", "u1"
                "--add-custom-annotations",

            ]
        },
        {
            "name": "preprocessor_app_specific_segm",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "test-data/preprocessor/sample_volumes/emdb_sff/emd_9094.map",
                "--input-kind",
                "map",
                "--input-path",
                "test-data/preprocessor/sample_segmentations/app_specific/emd_9094.seg",
                "--input-kind",
                "application_specific_segmentation",
                "--entry-id",
                "emd-9094",
                "--source-db",
                "emdb",
                "--source-db-id", "emd-9094",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "preprocessor_map_for_geometric_segmentation",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "preprocessor/temp/pdbe_dataset/bin4_denoised_dataset/1.mrc",
                "--input-kind",
                "map",
                "--entry-id",
                "pdbe-1.rec-geometric_segmentation",
                "--source-db",
                "pdbe",
                "--source-db-id", "pdbe-1.rec-geometric_segmentation",
                "--source-db-name", "pdbe",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "preprocessor_geometric_segmentation_test",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "preprocessor/temp/shape_primitives/shape_primitives_input.json",
                "--input-kind",
                "geometric_segmentation",
                "--entry-id",
                "pdbe-1.rec-geometric_segmentation",
                "--source-db",
                "pdbe",
                "--source-db-id", "pdbe-1.rec-geometric_segmentation",
                "--source-db-name", "pdbe",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--force-volume-dtype", "u1",
                "--add-segmentation-to-entry"
            ]
        },
        {
            "name": "preprocessor_emd_1273_just_map",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/emdb/emd-1273/emd_1273.map",
                "--input-kind",
                "map",
                // "--input-path",
                // "temp/v2_temp_static_entry_files_dir/emdb/emd-1273/emd_1273_msk_5.map",
                // "--input-kind",
                // "mask",
                // "--input-path",
                // "preprocessor/temp/custom_annotations_emd_1273.json",
                // "--input-kind",
                // "custom_annotations",
                "--entry-id",
                "emd-1273",
                "--source-db",
                "emdb",
                "--source-db-id", "emd-1273",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "preprocessor_emd_1273_just_mask_and_custom_annotations",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                // "--input-path",
                // "temp/v2_temp_static_entry_files_dir/emdb/emd-1273/emd_1273.map",
                // "--input-kind",
                // "map",
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/emdb/emd-1273/emd_1273_msk_5.map",
                "--input-kind",
                "mask",
                "--input-path",
                "preprocessor/temp/custom_annotations_emd_1273.json",
                "--input-kind",
                "custom_annotations",
                "--entry-id",
                "emd-1273",
                "--source-db",
                "emdb",
                "--source-db-id", "emd-1273",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--force-volume-dtype", "u1"
                "--add-segmentation-to-entry"
            ]
        },
        {
            "name": "preprocessor_emd_1832_just_sff",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                // "--input-path",
                // "test-data/preprocessor/sample_volumes/emdb_sff/EMD-1832.map",
                // "--input-kind",
                // "map",
                "--input-path",
                "test-data/preprocessor/sample_segmentations/emdb_sff/emd_1832.hff",
                "--input-kind",
                "sff",
                "--entry-id",
                "emd-1832",
                "--source-db",
                "emdb",
                "--source-db-id", "emd-1832",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                "--add-segmentation-to-entry"
            ]
        },
        {
            "name": "preprocessor_emd_1832_just_map",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "test-data/preprocessor/sample_volumes/emdb_sff/EMD-1832.map",
                "--input-kind",
                "map",
                // "--input-path",
                // "test-data/preprocessor/sample_segmentations/emdb_sff/emd_1832.hff",
                // "--input-kind",
                // "sff",
                "--entry-id",
                "emd-1832",
                "--source-db",
                "emdb",
                "--source-db-id", "emd-1832",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "preprocessor_omezarr_fig2ab_trajectory_epithelialcell",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/ssbd/98-Morita-ToothEpiCellDev/fig2ab_trajectory_epithelialcell.zarr",
                "--input-kind",
                "omezarr",
                "--entry-id",
                "ssbd-fig2ab_trajectory_epithelialcell",
                "--source-db",
                "ssbd",
                "--source-db-id", "ssbd-fig2ab_trajectory_epithelialcell",
                "--source-db-name", "ssbd",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--quantize-downsampling-levels", "1 2",
                // "--force-volume-dtype", "f2"
            ]
        },
        {
            "name": "preprocessor_emd_1273_custom_annotations",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/emdb/emd-1273/emd_1273.map",
                "--input-kind",
                "map",
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/emdb/emd-1273/emd_1273_msk_5.map",
                "--input-kind",
                "mask",
                "--input-path",
                "preprocessor/temp/custom_annotations_emd_1273.json",
                "--input-kind",
                "custom_annotations",
                "--entry-id",
                "emd-1273",
                "--source-db",
                "emdb",
                "--source-db-id", "emd-1273",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "preprocessor_omezarr_Airyscan_hook_BM",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/ssbd/170-Tsutsui-HookBM/Airyscan_hook_BM.zarr",
                "--input-kind",
                "omezarr",
                "--entry-id",
                "ssbd-Airyscan_hook_BM",
                "--source-db",
                "ssbd",
                "--source-db-id", "ssbd-Airyscan_hook_BM",
                "--source-db-name", "ssbd",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--quantize-downsampling-levels", "1 2",
                // "--force-volume-dtype", "f2"
            ]
        },
        {
            "name": "preprocessor_omezarr_5D",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/idr/idr-13457537/13457537.zarr",
                "--input-kind",
                "omezarr",
                "--entry-id",
                "idr-13457537",
                "--source-db",
                "idr",
                "--source-db-id", "idr-13457537",
                "--source-db-name", "idr",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--quantize-downsampling-levels", "1 2",
                // "--force-volume-dtype", "f2"
            ]
        },
        {
            "name": "nii_multiple_segmentations_4-3-0_subvolume",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/fib1-4-3-0.nii.gz",
                "--input-kind",
                "nii_volume",
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/mito_fib1-4-3-0.nii.gz",
                "--input-kind",
                "nii_segmentation",
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/lyso_fib1-4-3-0.nii.gz",
                "--input-kind",
                "nii_segmentation",
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/fv_fib1-4-3-0.nii.gz",
                "--input-kind",
                "nii_segmentation",
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/golgi_fib1-4-3-0.nii.gz",
                "--input-kind",
                "nii_segmentation",
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/nii_custom_annotations_4-3-0_multiple_segmentations.json",
                "--input-kind",
                "custom_annotations",
                "--entry-id",
                "nii-multiple-segmentations-430",
                "--source-db",
                "emdb",
                "--source-db-id", "nii-multiple-segmentations-430",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "nii_0-0-0_subvolume_lyso",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/fib1-0-0-0.nii.gz",
                "--input-kind",
                "nii_volume",
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/lyso_fib1-0-0-0.nii.gz",
                "--input-kind",
                "nii_segmentation",
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/nii_custom_annotations.json",
                "--input-kind",
                "custom_annotations",
                "--entry-id",
                "nii-lyso-000",
                "--source-db",
                "emdb",
                "--source-db-id", "nii-lyso-000",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "nii_multiple_segmentations_0-0-0_subvolume",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/fib1-0-0-0.nii.gz",
                "--input-kind",
                "nii_volume",
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/mito_fib1-0-0-0.nii.gz",
                "--input-kind",
                "nii_segmentation",
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/lyso_fib1-0-0-0.nii.gz",
                "--input-kind",
                "nii_segmentation",
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/nii_custom_annotations.json",
                "--input-kind",
                "custom_annotations",
                "--entry-id",
                "nii-multiple-segmentations-000",
                "--source-db",
                "emdb",
                "--source-db-id", "nii-multiple-segmentations-000",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "nii_4-3-0_subvolume_mito",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/fib1-4-3-0.nii.gz",
                "--input-kind",
                "nii_volume",
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/mito_fib1-4-3-0.nii.gz",
                "--input-kind",
                "nii_segmentation",
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/nii_custom_annotations.json",
                "--input-kind",
                "custom_annotations",
                "--entry-id",
                "nii-430",
                "--source-db",
                "emdb",
                "--source-db-id", "nii-430",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "nii_0-0-0_subvolume_mito",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/fib1-0-0-0.nii.gz",
                "--input-kind",
                "nii_volume",
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/mito_fib1-0-0-0.nii.gz",
                "--input-kind",
                "nii_segmentation",
                "--input-path",
                "preprocessor/temp/mouse_github_dataset/nii_custom_annotations_0-0-0_mito.json",
                "--input-kind",
                "custom_annotations",
                "--entry-id",
                "nii-mito-000",
                "--source-db",
                "emdb",
                "--source-db-id", "nii-mito-000",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "preprocessor_140GB_omezarr",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "/mnt/big_ome_zarr/9846152.zarr",
                "--input-kind",
                "omezarr",
                "--entry-id",
                "idr-9846152",
                "--source-db",
                "idr",
                "--source-db-id", "idr-9846152",
                "--source-db-name", "idr",
                "--working-folder", "/mnt/temp/temp_zarr_hierarchy_storage_for_big_omezarr",
                "--db-path", "/mnt/test_db_for_big_omezarr",
                // "--quantize-dtype-str", "u1",
                // "--quantize-downsampling-levels", "1 2",
                // "--force-volume-dtype", "f2"
            ]
        },
        {
            "name": "preprocessor_XYC_omezarr",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/idr/idr-10501752/10501752.zarr",
                "--input-kind",
                "omezarr",
                "--entry-id",
                "idr-10501752",
                "--source-db",
                "idr",
                "--source-db-id", "idr-10501752",
                "--source-db-name", "idr",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db"
            ]
        },
        {
            "name": "preprocessor_XYC_v03_omezarr_11511419",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/idr/idr-11511419/11511419.zarr",
                "--input-kind",
                "omezarr",
                "--entry-id",
                "idr-11511419",
                "--source-db",
                "idr",
                "--source-db-id", "idr-11511419",
                "--source-db-name", "idr",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db"
            ]
        },
        {
            "name": "preprocessor_XYC_v03_omezarr_9836842",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/idr/idr-9836842/9836842.zarr",
                "--input-kind",
                "omezarr",
                "--entry-id",
                "idr-9836842",
                "--source-db",
                "idr",
                "--source-db-id", "idr-9836842",
                "--source-db-name", "idr",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db"
            ]
        },
        {
            "name": "preprocessor_2D/5D_omezarr",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/idr/idr-5025553/5025553.zarr",
                "--input-kind",
                "omezarr",
                "--entry-id",
                "idr-5025553",
                "--source-db",
                "idr",
                "--source-db-id", "idr-5025553",
                "--source-db-name", "idr",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--quantize-downsampling-levels", "1 2",
                // "--force-volume-dtype", "f2"
            ]
        },
        {
            "name": "preprocessor_13GB_omezarr",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/idr/idr-13457227/13457227.zarr",
                "--input-kind",
                "omezarr",
                "--entry-id",
                "idr-13457227",
                "--source-db",
                "idr",
                "--source-db-id", "idr-13457227",
                "--source-db-name", "idr",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--quantize-downsampling-levels", "1 2",
                // "--force-volume-dtype", "f2"
            ]
        },
        {
            "name": "preprocessor_empiar_10070",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "test-data/preprocessor/sample_volumes/empiar/b3talongmusc20130301.mrc",
                "--input-kind",
                "map",
                "--input-path",
                "test-data/preprocessor/sample_segmentations/empiar/empiar_10070_b3talongmusc20130301.hff",
                "--input-kind",
                "sff",
                "--entry-id",
                "empiar-10070",
                "--source-db",
                "empiar",
                "--source-db-id", "empiar-10070",
                "--source-db-name", "empiar",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "preprocessor_custom_annotations_idr_6001247",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/idr/idr-6001247/6001247.zarr",
                "--input-kind",
                "omezarr",
                "--input-path",
                "preprocessor/temp/custom_annotations_vol_ch_ann.json",
                "--input-kind",
                "custom_annotations",
                "--entry-id",
                "idr-6001247",
                "--source-db",
                "idr",
                "--source-db-id", "idr-6001247",
                "--source-db-name", "idr",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
            ]
        },
        {
            "name": "preprocessor_custom_annotations_cell_chromosomes",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/idr/idr-5514375/5514375.zarr",
                "--input-kind",
                "omezarr",
                "--input-path",
                "preprocessor/temp/custom_annotations_two_lattices.json",
                "--input-kind",
                "custom_annotations",
                "--entry-id",
                "idr-5514375",
                "--source-db",
                "idr",
                "--source-db-id", "idr-5514375",
                "--source-db-name", "idr",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--quantize-downsampling-levels", "1 2",
                // "--force-volume-dtype", "f2"
            ]
        },
        {
            "name": "preprocessor_emd_1832_custom_annotations",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "test-data/preprocessor/sample_volumes/emdb_sff/EMD-1832.map",
                "--input-kind",
                "map",
                "--input-path",
                "test-data/preprocessor/sample_segmentations/emdb_sff/emd_1832.hff",
                "--input-kind",
                "sff",
                "--input-path",
                "preprocessor/temp/custom_annotations.json",
                "--input-kind",
                "custom_annotations",
                "--entry-id",
                "emd-1832",
                "--source-db",
                "emdb",
                "--source-db-id", "emd-1832",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--force-volume-dtype", "u1"
            ]
        },
        {
            "name": "preprocessor_omezarr_cell_chromosomes",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/idr/idr-5514375/5514375.zarr",
                "--input-kind",
                "omezarr",
                "--entry-id",
                "idr-5514375",
                "--source-db",
                "idr",
                "--source-db-id", "idr-5514375",
                "--source-db-name", "idr",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--quantize-downsampling-levels", "1 2",
                // "--force-volume-dtype", "f2"
            ]
        },
        {
            "name": "preprocessor_omezarr",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "temp/v2_temp_static_entry_files_dir/idr/idr-6001247/6001247.zarr",
                "--input-kind",
                "omezarr",
                "--entry-id",
                "idr-6001247",
                "--source-db",
                "idr",
                "--source-db-id", "idr-6001247",
                "--source-db-name", "idr",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                // "--quantize-dtype-str", "u1",
                // "--quantize-downsampling-levels", "1 2",
                "--force-volume-dtype", "f2"
            ]
        },
        {
            "name": "preprocessor_emd_1832",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--input-path",
                "test-data/preprocessor/sample_volumes/emdb_sff/EMD-1832.map",
                "--input-kind",
                "map",
                "--input-path",
                "test-data/preprocessor/sample_segmentations/emdb_sff/emd_1832.hff",
                "--input-kind",
                "sff",
                "--entry-id",
                "emd-1832",
                "--source-db",
                "emdb",
                "--source-db-id", "emd-1832",
                "--source-db-name", "emdb",
                "--working-folder", "preprocessor/temp/temp_zarr_hierarchy_storage",
                "--db-path", "preprocessor/temp/test_db",
                "--quantize-dtype-str", "u1",
                // "--force-volume-dtype", "u1"
            ]
        },
        // {
        //     "name": "Debug OME zarr",
        //     "type": "python",
        //     "request": "launch",
        //     "program": "${file}",
        //     "console": "integratedTerminal",
        //     "args": [
        //         "python", "preprocessor/main.py",
        //         "--db_path", entry['db_path'],    
        //         "--single_entry", entry['single_entry'],
        //         "--entry_id", entry['entry_id'],
        //         "--source_db", entry['source_db'],
        //         "--source_db_id", entry['source_db_id'],
        //         "--source_db_name", "idr"
        //     ]
        // },
        {
            "name": "Store OME Zarr sample",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--single_entry",
                "/sw/cellstar-volume-server/test-data/preprocessor/raw_input_files/idr/idr-6001240/6001240.zarr",
                "--ome_zarr_path",
                "/sw/cellstar-volume-server/test-data/preprocessor/raw_input_files/idr/idr-6001240/6001240.zarr",
                "--entry_id",
                "6001240",
                "--source_db",
                "idr",
                "--source_db_id", "6001240",
                "--source_db_name", "OME"
            ]
        },
        {
            "name": "Python: adding single entry (emd-1832) to db folder+ u2 quantization",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--db_path",
                "db",
                "--quantize_volume_data_dtype_str",
                "u2",
                "--single_entry",
                "temp/single_entry_folder",
                "--entry_id",
                "emd-1832",
                "--source_db",
                "emdb",
                "--force_volume_dtype",
                "f8"
            ]
        },
        {
            "name": "Python: adding single entry (EMPIAR-10070) to db folder",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--db_path",
                "db",
                "--single_entry",
                "temp/single_entry_folder_empiar_10070",
                "--entry_id",
                "empiar-10070",
                "--source_db",
                "empiar",
                "--force_volume_dtype",
                "u1"
            ]
        },
        {
            "name": "Python: parametrized dbs",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--create_parametrized_dbs"
            ]
        },
        {
            "name": "Python: default db building to db folder",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--db_path",
                "db"
            ]
        },
        {
            "name": "Python: default db building to db folder+ u1 quantization",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--db_path",
                "db",
                "--quantize_volume_data_dtype_str",
                "u1"
            ]
        },
        {
            "name": "Python: default db building to db folder+ u2 quantization",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--db_path",
                "db",
                "--quantize_volume_data_dtype_str",
                "u2"
            ]
        },
        {
            "name": "Python: default ZIP db building",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--db_path",
                "db-ZIP"
            ]
        },
        {
            "name": "Python: default no-zip db building",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "args": [
                "--db_path",
                "db-nozip"
            ]
        }
    ]
}